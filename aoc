#!/bin/sh

set -e

_err() {
	echo "$*"
	exit 1
}

_usage() {
	echo "Usage:"
	echo "    run [day] [part]      - runs the puzzle"
	echo "    run-test [day] [part] - runs the puzzle with the test input"
	exit 1
}

_compile() {
	mkdir -p bin
	gcc -Wall -g "src/$1.c" -o "bin/$1"
}

_check_puzzle_input() {
	[ "$1" ] || _err "Missing puzzle day"
	[ "$2" ] || _err "Missing puzzle part"
}

_run() {
	day=$1
	part=$2
	example=$3
	_check_puzzle_input "$day" "$part"

	input_file="data/input-$day"
	result_file="data/result-$day-$part"
	if [ "$example" ]; then
		input_file="data/input-test-$day"
		result_file="data/result-test-$day-$part"
	fi

	name="puzzle-$day-$part"
	src="src/$name.c"

	[ -f "$src" ] || _err "Missing $src file"
	_compile "$name"

	expected_result=$(cat "$result_file")
	bin/"$name" "$input_file" >/dev/null
	result=$(bin/"$name" "$input_file")

	if [ "$result" = "$expected_result" ]; then
		echo "Results match ! Result: $result"
	else
		echo "Results don't match! Got: $result expected $expected_result"
	fi
}

case "$1" in
	run)      _run "$2" "$3"           ;;
	run-test) _run "$2" "$3" "example" ;;
	*)        _usage                   ;;
esac
